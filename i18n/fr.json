{
    "nav": {
        "mobil": {
            "show": "Montrer Navigation",
            "hide": "Cacher Navigation"
        },
        "home": "home",
        "about": "Moi",
        "resume": "Mon parcours",
        "work": "Portfolio",
        "contact": "Contact"
    },
    "banner-text": {
        "h1": "Je suis Paul Sainrat",
        "h3": "Je suis un <span>ingénieur</span> avec une formation en <span>système et logiciel embarqué</span>. Passionné d'<span>électronique</span> et <span>d'informatique</span>, j'adore explorer différents outils et développer de nouvelles compétences sur mon temps libre. Dans ce site web, je détaille certains de mes <a class=\"smoothscroll\" href=\"#portfolio\"> projets personnels</a>, ainsi que mes <a class=\"smoothscroll\" href=\"#resume\"> compétences et mes  experiences professionnelles</a>."
    },
    "about": {
        "h2-titre": "À propos de moi",
        "text": "",
        "contact": "Comment me contacter",
        "dwl": "Télécharger mon CV"
    },
    "resume": {
        "ed": "<span>Formations</span>",
        "education": {
            "titre1": "Université de Sherbrooke",
            "desc1": "Département de Génie informatique<span>&bull;</span><em  class=\"date\">2018</em>",
            "tags1": "C Embarqué,  RTOS,  Temps réel,  ARM Cortex M,  Réseau,  ZigBee,  Mbed,  DAC,  CAD,  UART,  I<sup>2</sup>C,  SPI,  CAN",
            "titre2": "ENSIMAG - INP Grenoble",
            "desc2": "Filière Système et logiciel Embarqué<span>&bull;</span><em  class=\"date\">2017</em>",
            "tags2": "Programmation orientée Objet,  Programmation en temps réel,  Base de Données,  Conception de logiciel,  Système d'exploitation,  Algorithmie,  Architecture de microprocesseurs",
            "titre3": "Phelma - INP Grenoble",
            "desc3": "Filière Physique Electronique Télecoms<span>&bull;</span><em  class=\"date\">2016</em>",
            "tags3": "Électronique,  Traitement du signal,  Automatique,  Assembleur"
        },
        "wrk": "<span>Experiences</span>",
        "work": {
            "task": "Tâches ▼",
            "titre1": "Naval Group",
            "desc1": "Ingénieur Développement logiciel<span>&bull;</span><em class=\"date\">2022-2023</em>",
            "tasklist1": "<li>Tenu d'une documentation technique : Spécification Logicielle</li><li>Prise en main d'un code déjà existant</li><li>Développement de fonctionnalités en <em>C++</em></li><li>Scripts de test, scénario et couverture d'exigence en <em>Python</em></li><li>Test unitaire</li>",
            "tags1": "C, C++, Vim, Eclipse, Git, CentOS, Python",
            "titre2": "Stormshield",
            "desc2": "Ingénieur Système<span>&bull;</span><em class=\"date\">2020-2022",
            "tasklist2": "<li>Traduction de documents techniques en anglais</li><li>Rédaction de documents techniques : Architecture (VPN)</li><li>Rédaction de documents techniques : Fonctionnel (IKE, LDAP, IPSEC)</li><li>Exploration du code source via une VM Ubuntu</li>",
            "tags2": "C, C++, TCP/IP, IPSEC, IKE, LDAP, Virtual Box, Vim, GIT, Phabricator, FreeRTOS, Word",
            "desc3": "Ingénieur Logiciel<span>&bull;</span><em class=\"date\">2022",
            "tasklist3": "<li>Développement de fonction en C</li><li>Debbugage avec GDB</li><li>Build du firmware</li><li>Mise à jour du firmware sur un firewall physique</li><li>code Peer-review</li>",
            "tags3": "Ubuntu, FreeBSD, C, C++, GDB, Makefile, Git, Phabricator, Arcanist",
            "titre4": "Innovation lab' - ASTEK",
            "desc4": "Stagiaire Ingénieur Chercheur<span>&bull;</span><em class=\"date\">2020",
            "tasklist4": "<li>Études et développement d'une technologie innovante</li><li>Rédaction du cahier des charges</li><li>Rédaction et validation des plans de tests</li><li>Développement de logiciels pour communiquer avec le module RFID</li><li>Dimensionnement d'un banc de test motorisé</li><li>Adaptation d'un système existant pour répondre au cahier des charges</li><li> Traitement mathématique des données produites</li>",
            "tags4": "C, Python, Arduino, RFID, Communication Série, Communication courte portée"
        },
        "skills": {
            "titre1": "<span> Compétences</span>",
            "desc1": ""
        }
    },
    "portfolio": {
        "h1": "Projets personnels développés sur mon temps libre",
        "h2": "Projets réalisés pendant ma carrière professionnelle",
        "h3": "Projets réalisés dans le cadre de ma formation",
        "wrapper": {
            "mod1": {
                "titre": "La Robe de la Lumière",
                "desc": ""
            },
            "mod2": {
                "titre": "Imprimante et impression 3D",
                "desc": ""
            },
            "mod3": {
                "titre": "Clap switch",
                "desc": ""
            },
            "mod4": {
                "titre": "Binary Clock, retour aux basiques",
                "desc": ""
            },
            "mod5": {
                "titre": "Domotique faite maison",
                "desc": ""
            },
            "mod6": {
                "titre": "Donjons et dragons",
                "desc": ""
            },
            "mod7": {
                "titre": "Game-Dev",
                "desc": ""
            },
            "mod8": {
                "titre": "Système de navigation embarqué",
                "desc": "Naval Group"
            },
            "mod9": {
                "titre": "Obtention d'une certification pour un firewall",
                "desc": "Stormshield"
            },
            "mod10": {
                "titre": "Dimensionnement d'un système de comptage par RFID",
                "desc": "Astek"
            },
            "mod11": {
                "titre": "Apprentissage par problème autour d'un Cortex-M3",
                "desc": ""
            },
            "mod12": {
                "titre": "Simultaion d'un microprocesseur 8bit sur FPGA",
                "desc": ""
            },
            "mod13": {
                "titre": "Creation d'un compilateur",
                "desc": ""
            }
        },
        "popup": {
            "details": "plus de détails",
            "close": "fermer",
            "mod1": {
                "desc": "Dans le cadre de sa formation de costumière et accessoiriste, ma compagne a dû réaliser un costume de théâtre. Elle a choisi de représenter le personnage de la Lumière dans la pièce <i> L'Oiseau Bleu</i> de Maurice Maeterlinck. Pour réaliser la vision qu'elle avait du costume, elle m'a demandé de l'aide pour la partie électronique et système embarqué.",
                "brand": "ESP-01, Dev Web, C++, UpCycling, Impression 3D, CAD"
            },
            "mod2": {
                "desc": "Lors du premier confinement, je me suis intéressé au hobby de l'impression 3D. Je me suis commandé une imprimante en kit et j'ai rapidement mis la main à la pâte.",
                "brand": "CAD, Impression 3D, Autonomie"
            },
            "mod3": {
                "desc": "J'ai ramené lors de mon semestre d'étude au Canada un jouet pour enfants qui projette un arc-en-ciel sur un mur. J'ai voulu le modifier pour en améliorer l'autonomie, le rendre plus pratique et lui donner plus de puissance.",
                "brand": "Upcycling, Electronique, Kicad"
            },
            "mod4": {
                "desc": "J'avais envie pour ce projet de réaliser une horloge binaire ! Je l'ai voulu très simplifier, en utilisant des composants basiques et sans utiliser de microcontrôleur.",
                "brand": "Kicad, Electronique, ICs"
            },
            "mod5": {
                "desc": "En explorant les projets que des internautes ont réalisés avec leurs Raspberry Pi, je suis tombé sur de multiples projets de domotique home-made. J'ai voulu essayer moi-même d'installer chez moi un petit système de domotique en utilisant une RaspberryPi.",
                "brand": "ESP-01, RaspberryPi, C++, Platformio, MQTT"
            },
            "mod6": {
                "desc": "Depuis quelques années, le jeu de rôle a pris une place importante dans ma vie. Donjon Master passionné ou joueur assidu, j'adore les challenges qu'apporte ce genre de jeu!",
                "brand": "Communication, Imagination, Collaboration, Organisation, Travail en Equipe "
            },
            "mod7": {
                "desc": "J'aime beaucoup les jeux vidéo, et je trouve très intéressant de voir comment l'informatique peut être utilisée à des fins créatives et artistiques. J'ai eu envie, à mon échelle, de coder un petit jeu vidéo sur Unity pour en découvrir plus sur les tenants et les aboutissants de la création d'un jeu.",
                "brand": "C#, Programation orienté Objet, Architecture "
            },
            "mod8": {
                "desc": "Ce projet en diffusion restreinte, je ne peux donc pas entrer dans les détails de la mission. J'ai intégré une équipe d'une dizaine de développeurs avec une méthode de travail en cycle en V. Développement en C++ du logiciel cœur système, qui fait l'interface entre les différents composants du système et l'interface graphique. Le logiciel est découpé en plusieurs modules prenant chacun en charge la communication avec un composant. J'étais en charge du module de la navigation, et je travaillais en étroite collaboration avec un ingénieur système qui s'occupait de définir les exigences du module et un ingénieur QA qui était chargé d'intégrer et tester le logiciel. Chaque module a été développé en s'appuyant sur un Framework déjà existant.",
                "brand": ""
            },
            "mod9": {
                "desc": "Le client (Stormshield) propose des solutions de cybersécurité tel que des firewalls. De tels produits peuvent être évalué par des organismes tels que l'ANSSI (Agence nationale de la sécurité des systèmes d'information) pour associer au produit un certain \"niveau\" de sécurité. Le firmware est commun à tous les type de firewall et c'est la cible de l'évaluation. Le firmware a déjà été certifié au niveau EAL3+ par l'ANSSI. Le but est d'obtenir le niveau EAL4+. Pour cela, il a fallu mettre la documentation technique à jour, la traduire en anglais et aller plus en profondeur dans la description des mécanismes et des interactions entre les différents modules du firmware.<br>En attendant les reponse de l'ANSII, j'ai intégré les équipes de QA. Ma mission était d'appliquer des corrections sur le firmware du produit. Pour cela, on prend la sortie d'un logiciel d'analyse de code \"Coverity\", et on analyse et corrige les erreurs relevées par le logiciel. Avant de pouvoir intégrer cette nouvelle équipe, j'ai d'abord suivi une formation. Il s'agit d'une série d'exercices à faire et des documents à lire pour prendre en main les différents outils utilisés par les équipes de développement. Le but est de se familiariser avec le firmware, les règles de codes ainsi que les processus de mise à jour du firmware et la manipulation des machines de builds",
                "brand": ""
            },
            "mod10": {
                "desc": "Pour mon stage de fin d'étude, j'ai integré l'Astek Innovation lab' ou j'ai occupé un poste d'ingenieur chercheur. J'ai du étudier un système de comptage de colis par RFID.",
                "brand": "Arduino, C, RFID, SPI, Matlab, Python"
            },
            "mod11": {
                "desc": "Lors de ma troisième année en école d'ingénieurs, j'ai effectué un échange avec l'université de Sherbrooke au Canada. J'ai eu la chance d'intégrer un programme avec une méthode de travail totalement différente de ce que j'avais connu jusque la durant mes études : L'apprentissage par problèmes.",
                "brand": ""
            },
            "mod12": {
                "desc": "Lors de ma deuxième année en école d'ingénieurs, nous avions un cours destiné à nous apprendre à manipuler des FPGA. Notre projet de fin de semestre s'étalait sur plusieurs semaines pendant lesquelles nous devions produire un code en VHDL pour simuler un micro processeur 8 bits capables de lire des cartouches de gameboy.",
                "brand": "FPGA, VHDL"
            },
            "mod13": {
                "desc": "Durant ma deuxième année en école d'ingénieurs, nous avions un projet qui s'étalait sur 1 mois à l'issue duquel nous devions produire un compilateur pour un langage factice qui ressemblait vaguement au Java. Nous étions organisés en groupes de 6, avec un représentant de chaque filière de l'école, et nous devions appliquer une méthodologie agile. Contrairement à mes camarades plus proches du logiciel, j'étais proche du hardware. J'étais donc en charge de la partie du compilateur qui se charge de traduire le programme en instruction assembleur.",
                "brand": "C, Java, Asm"
            }
        }
    },
    "contact": {
        "title": "Contactez moi",
        "desc": "",
        "form": {
            "name": "Nom<span class=\"required\">*",
            "email": "Email<span class=\"required\">*",
            "subj": "Sujet",
            "mess": "Message<span class=\"required\">*",
            "sub": "Envoyer"
        },
        "add": "Comment me contacter autrement"
    },
    "article": {
        "robe": {
            "article": "Ma compagne est diplômée d'un DNMADE (Diplôme National des Métiers d'Art et Du Design) de costumière et                 accessoiriste. Dans le cadre de sa formation, pendant la troisième et dernière année, elle a dû designer                 et réaliser elle-même un costume sur la pièce de son choix. Elle a choisi de travailler sur la pièce de                 théâtre <i>L'Oiseau Bleu</i> de Maurice Maeterlinck, et de réaliser le costume du personnage de la Lumière.             </p>             <p>                 Elle voulait que le personnage soit capable, grâce à son costume/accessoire, d'illuminer la scène, de                 révéler des éléments du décor grâce à des ombres chinoises, de la lumière colorée et de la lumière UV.                 Nous avons donc écrit ensemble un cahier des charges pour que je puisse dimensionner et commencer à                 designer un système.              </p>              <p>                 Pour le microcontrôleur, j'avais sous la main plusieurs <span>ESP-01</span>. J'ai donc proposé de                 contrôler les différents éléments de la robe grâce à une interface web qui serait hébergée sur l'ESP.              </p>              <p>                 Pour commencer, nous avons choisi les LEDS à utiliser pour l'éclairage principal de la robe. Nous avons                 décidé d'acheter un ruban de <span>LEDs 5730</span> blanches à la couleur légèrement chaude. Les LEDs                 sont alimentées en 12V et la puissance dépend de la longueur de ruban qu'on utilise (environ 20Wi/m).                 Les LEDs sont attachées à une ceinture corsetée grâce à du velcro. Le dernier rang de LEDs est orienté                 vers le bas grâce à des petites cales imprimé en 3D qui sont fixées sur une baleine en plastique.             </p>             <p>                 Pour la lumière colorée et la lumière UV, ma compagne a conçu des gants couleur chaire dans lesquelles                 on pouvait cacher de petites plaquettes surmontées de matrices de LEDS. L'idée était que les gants                 puissent être équipés soit avec des LEDs UV soit avec des LEDs colorées en fonction de la scène. Pour la                 lumière colorée, nous avons choisi des <span>adressable WS2812B</span>. Pour la lumière UV, nous avons                 d'abord essayé un ruban de LEDs UV, mais la lumière UV n'était pas assez intense, nous avons donc acheté                 des LEDs plus puissantes et j'ai monté une matrice de LEDs moi-même.              </p>             <p>                 Pour éviter d'avoir des câbles qui suivent l'actrice, nous avons décidé d'alimenter le système à l'aide                 d'une batterie. J'ai conçu moi-même deux batteries en utilisant à chaque fois 3 batteries                 <span>Li-ion</span> recyclées d'une batterie de PC portable. Les trois batteries sont tenues dans un                 boîtier imprimé en 3D avec des emplacements prévus pour presser des bandes de nickel contre les                 batteries, et ainsi éviter d'avoir à souder. Un petit circuit imprimé permet de protéger les batteries                 et de gérer la charge et la décharge. Nous avions donc deux batteries de 12V rechargeables et                 interchangeables avec un courant maximal de 10A en sortie (dimensionné par le circuit de protection de                 la batterie).              </p>              <p>                 Les différents éléments du système sont tous contrôlés par un module ESP-01. Le microcontrôleur est alimenté à l'aide d'un step-down qui permet de fournir du 3.3V nécessaires au fonctionnement de l'ESP-01 et des LEDs adressable. L'ESP-01 possède huit broches, et pour notre projet  nous avons utilisé les broches GPIO0 et GPIO2 pour contrôler les LEDs blanches et les LEDs UVs. Pour être plus précis, l'ESP contrôle l'ouverture ou la fermeture d'un <span>MOSFET</span> assez costaud pour supporter les 12V et la puissance tirée par les LEDS. L'intensité des LEDs blanches est réglable puisqu'on drive le MOSFET avec une PMW. Pour contrôler les LEDs adressables, je me suis contenté d'utiliser la librairie Neopixel de Adafruit.               </p>             <p>                 L'ESP héberge un petit serveur web avec une page HTML très simple. Sur la page se trouve un slider pour contrôler l'intensité des lumières blanches, un slider pour contrôler la lumière UV et un color-picker pour choisir la couleur des LEDs colorées. Les lumières sont contrôlées en direct sur la robe. Tout le système est contenu dans un boîtier imprimé en 3D et tous les éléments du système sont joints grâce à des broches mâles/femelles pour permettre de l'installer et de le retirer facilement de l'actrice."
        },
        "3d": {
            "article": "Je traîne souvent sur des sites de hacker/maker tel que Hackster.io ou Hackaday ... Et j'ai constaté                 comment les imprimantes 3D sont rapidement passées d'une technologie à la pointe à un hobby très                 accessible avec des multiples applications. Lors du confinement, j'ai constaté que j'avais beaucoup plus                 de temps libre et j'ai eu envie d'investir dans une imprimante 3D en kit! J'ai parcouru de nombreux                 forums en quête de la bonne imprimante, pour au final me décider d'acheter la <span>Prusa I3 pro                     Bi</span> par                 Geeetech. Je voulais commencer par une imprimante low-cost et en kit parce que j'étais plus intéressé                 par le principe de l'impression 3D que par l'imprimante en elle-même. Je voulais une machine qui                 fonctionne parce que je l'ai faite fonctionner et non parce que j'y ai mis le prix.              </p>              <p>                 Une fois que mon imprimante était venue à la vie et que j'avais imprimé mon premier benchy avec succès,                 je me suis tourné vers les outils de CAD gratuits ou open source. J'ai donc appris à utiliser                 <span>FreeCAD</span> et                 <span>Fusion360</span> pour créer mes propres designs sans m'appuyer sur ce qui a été uploadé par la                 communauté des                 enthousiastes de l'impression 3D.              </p>              <p>                  J'ai d'abord créé des objets du quotidien comme des accessoires d'étagère, une petite poupée japonaise,                 une boite à savon, ou des fixations pour lampe.              </p>              <p>                 Grace à ces premiers design, j'avais prit en main les outils et j'ai pu réaliser mes premiers projets!                 J'ai entrepris de hacker ma manette sans fil. J'ai remplacé les 3 piles AA par une pile                 <span>Li-ion</span>                 rechargeable venant d'une batterie d'ordinateur portable mort.             </p>             <p>                  J'ai également designé et imprimé un cadre pour un écran que j'ai créé à partir de l'écran d'un PC                 portable mort. Le cadre, posé sur un pied imprimé aussi en 3D, peut passer d'une position classique                 horizontale à une position verticale idéale pour le code!"
        },
        "clap": {
            "article":"Ce petit jouet que j'ai ramené du Canada ne paie pas de mine comme ça, mais c'est un souvenir qui compte                 pour moi. Le bouton était abîmé et la luminosité des LEDS laissait à désirer, j'ai donc voulu modifier                 l'arc-en-ciel pour l'améliorer.              </p>             <p>                 Tout d'abord, j'ai remplacé les 3 batteries par quelque chose de plus pratique. J'avais sous la main une                 batterie de PC portable, je l'ai donc ouverte pour récupérer une pile rechargeable de 3.7V. Je l'ai                 branché au reste du système avec un petit circuit imprimé qui prend en charge la recharge de la batterie                 par USB et régule l'alimentation du système.              </p>             <p>                 La partie la plus intéressante du projet a été le remplacement du bouton. Je ne voulais pas me contenter                 de remplacer le bouton par un autre, je voulais être capable d'allumer et d'éteindre l'arc-en-ciel la                 distance. J'ai pensé au cliché du gars allongé dans son lit qui éteint les lumières en claquant des                 mains, j'ai donc cherché à remplacer le bouton par un \"Clap switch\".              </p>             <p>                 J'ai d'abord démonté un vieux téléphone fixe pour récupérer un petit micro. J'ai amplifié le signal qui                 en sortait avec un simple amplificateur audio de <span>type A</span> avec <span>2 transistors bipolaires</span>.              </p>             <p>                 Puis, j'ai cherché un moyen de simuler le comportement du bouton d'origine qui restait en position                 ouverte ou fermée. J'ai trouvé plusieurs montages utilisant des transistors bipolaires et un                 condensateur pour réaliser un <span>\"Soft Latch Circuit\"</span> qui permet de passer d'un état ouvert à un état fermé                 sur le contrôle d'une impulsion.             </p>             <p>                 Je me suis ensuite aidé de <span>Kicad</span> pour dessiner le circuit et réaliser le routage. Je n'avais pas envie                 de réaliser ou de commander un PCB, j'ai donc monté le circuit sur une protoboard avant de l'installer                 dans l'arc-en-ciel."
        },
        "clock": {
            "article": "Il y a quelques années, je regardais l'excellente série de vidéos du youtubeur <span>Ben Eater</span> <i>« Building an                 8-bit breadboard computer »</i>. J'ai été particulièrement intéressé par son horloge basée sur un <span>NE555</span>, et                 j'ai voulu reproduire le principe en l'utilisant dans un circuit plus simple pour faire scintiller des                 LEDS.              </p>             <p>                 J'ai voulu créer un système qui repose uniquement sur des circuits intégrés et des composantes                 électroniques basiques. En effet, je ne voulais pas utiliser de microcontrôleur, la tache n'aurait eu                 aucun intérêt d'un point de vue hardware ou software. J'avais envie de créer un circuit qui produit une                 donnée numérique qui pourrait être comprise et utilisée par un humain, faire quelque chose de pratique                 et de beau. Toujours inspiré par les vidéos de Ben, j'ai donc décidé de faire une horloge.             </p>             <p>                  J'ai cherché des composants pour accomplir des incrémentations successives rythmées par l'oscillation                 régulière d'un autre composant. Pour compter les heures, minutes et secondes, j'ai simplement choisi des                 Ripple-carry binary counters. Grâce à 3 <span>CD4024B</span> de chez Texas instrument, j'ai pu encoder les heures,                 minutes et secondes de mon horloge en utilisant ses 7 sorties. Les minutes et les secondes sont                 représentées sur 6 bits chacun, et 5 bits pour les heures. Pour réinitialiser les compteurs, j'ai                 utilisé des quadruples AND gates i<span>SN54LS21</span> de chez Texas instrument. Lorsque le compteur atteint sa                 valeur maximale, on active la broche reset grâce au SN54LS21. Pour l'oscillateur, j'étais initialement                 parti sur un montage avec un NE555 comme dans la vidéo de Ben. Seulement le NE555 manque de précision et                 de stabilité à une si basse fréquence. J'ai donc opté pour une méthode plus simple en démontant une                 vieille horloge cassée et en récupérant son quartz.              </p>             <p>                 Ce projet n'a, hélas, jamais quitter la breadboard. Je n'avais pas encore d'imprimante 3D à l'époque et                 je n'ai pas réussi à trouver à l'horloge un boîtier qui me plaisait."
        },
        "home": {
            "article": "Étant intéressé par les maisons connectées, j'ai voulu essayer d'intégrer ma cafetière dans un système                 d'automatisation de mon logement.             </p>             <p>                 J'ai d'abord choisi <span>Mosquitto</span> comme <span>broker MQTT</span> et je l'ai installé sur un <span>RaspberryPi</span>. J'ai ensuite                 placé un <span>ESP-01</span> dans la cafetière, et j'allume et j'éteins la cafetière avec un <span>MOSFET</span>. Je contrôle                 l'état de la cafetière grâce à des messages MQTT envoyé depuis la RaspberryPi. L'ESP met à jour le                 statut de la cafetière avec des « publish » MQTT.             </p>             <p>                 La prochaine étape serait de l'intégrer dans le système déjà existant de domotique dans mon logement,                 mais ce n'est pas si facile et je n'ai pas réussi à trouver de solution pour le moment."
        },
        "dnd": {
            "article": "Lors du premier confinement, j'ai offert à ma famille \"Tabletop Simulator\". Ce logiciel permet aux                 amateurs de jeux de société de se retrouver autour d'une table virtuelle (malgré les restrictions                 sanitaires en vigueur à ce moment-là). En explorant le contenu de base du logiciel, j'ai découvert des                 outils et des miniatures qui permettaient de jouer à Donjons et Dragons. Cela m'a donné envie                 d'apprendre les règles de Donjons et Dragons.             </p>             <p>                 Après avoir visionné toutes les saisons de la série de jeu de rôle \"Dimensions 20\" et avoir potassé le                 \"Player Handbook\" et le \"Dungeon Master Guide\", j'étais enfin prêt à guider mon groupe d'aventuriers                 pour leur campagne initiatique. J'ai vite réalisé que prendre des notes dans un cahier ne sera pas                 suffisant. J'ai donc cherché à mettre en place un système qui me permettrait d'organiser traces de                 chaque session de jeu efficacement.             </p>             <p>                 J'ai alors découvert Notion. Cet outil en ligne m'a permis d'organiser mes notes en pages et en                 sous-pages, mais la fonctionnalité la plus intéressante est de créer une base de données. Acteur, PNJ,                 ville, clan … tous les éléments de la campagne et du monde que j'ai créé sont stockés dans une base de                 données. Ainsi, moi comme mes joueurs pouvons facilement retrouver des informations de campagnes passées                 en quelques cliques.             </p>             <p>                 Le logiciel \"Tabletop Simulator\" est open source et facilement modelable avec des plugins de la                 communauté ou avec ses propres scripts en Lua. Je ne suis pas très familier avec ce langage, mais j'ai                 tout de même scripté quelques fonctionnalités qui étaient propres à ma campagne.             </p>             <p>                  J'ai récemment fait l'acquisition d'un autre logiciel de Virtual Table Top nommé \"Fundry VTT\" que je                 commence tout juste à prendre en main! J'ai changé de logiciel car Fundry VTT est un logiciel de                 «Virtual Table Top» adapté aux jeux de rôle comme Donjons et Dragons, là où «Tabletop Simulator»                 était un logiciel pour les jeux de société en général. Dans «Fundry VTT», la logique du jeu de rôle                 est déjà en place, c'est idéal pour gérer des fiches de personnages, ajouter des sorts...             </p>             <p>                 En plus de ma campagne virtuelle, j'ai aussi dirigé et participé à de nombreux one-shots en réel. Pour                 ces parties, inspirées par le travail de Rick Perry pour «Dimension 20» et de Julien Mindel pour «La                 Bonne Auberge», j'ai voulu moi-même réaliser mes propres décors et battle maps. En suivant des vidéos                 tutorielles sur Youtube, je me sus vite rendu compte que le polystyrène extrudé était une matière idéale                 pour le modélisme, mais la meilleure façon de la couper était d'utiliser une découpeuse à fil chaud.             </p>             <p>                 Ne voulant pas dépenser près de 100 euros pour ce type de machine, j'ai décidé de me la faire moi-même.                 J'avais presque tout ce dont j'avais besoin sous la main, à part un fil de nichrome. Grâce à un                 calculateur en ligne, j'ai pu trouver la bonne longueur de fil ainsi que le courant qui devait le                 traverser pour réussir à découper correctement la mousse. J'ai utilisé une alimentation, dont j'ai                 oublié la fonction d'origine, et un potentiomètre pour contrôler la température du fil de nichrome.             </p>             <p>                 Grâce à cette machine, j'ai pu découper plusieurs sets de tuiles de tailles et de formes différentes.                 Après les avoir texturées et peintes, j'ai pu réaliser 2 sets de tuiles modulables pour créer des                 battles maps et des donjons différents. J'ai également utilisé mon imprimante 3D pour imprimer des                 éléments de décor ainsi que les figurines de mes personnages."
        },
        "sherbrooke": {
            "article": "Durant mes études, j’ai décidé d’effectuer un semestre à l’étranger lors de ma 3e année d’école                 d’ingénieurs. J’ai été très intéressé par le programme de l’Université de Sherbrooke au Canada, car il                 proposait un apprentissage par problèmes dans leur département de génie informatique, méthode que je                 n’avais pas encore vue ailleurs.             </p>             <p>                 Le support du semestre était un microcontrôleur basé sur un <span>ARM Cortex M</span>. Nous étions divisés en groupe                 de trois, et chaque session de travail durait 2 à 3 semaines avec la moitié du temps de travail en                 autonomie.             </p>             <p>                 On nous donnait un problème et un cahier des charges, et nous devions produire une solution et la                 présenter ainsi que nos résultats à la fin du temps imparti. Chaque session abordait différentes notions                 autour du système embarqué. Pour réaliser les solutions, nous devions nous baser sur la datasheet du                 processeur et, lorsque nous étions bloqués, interroger notre professeur afin d’avoir de nouvelles                 notions au cours suivant pour pouvoir avancer.             </p>             <p>                 Lors d’une session, nous avons par exemple dû créer une fonction en assembleur pour envoyer des messages                 en <span>UART</span>, et utiliser ces fonctions dans un programme en C. Nous n’avions pas le droit de nous baser sur                 une librairie existante et nous devions nous-même utiliser la datasheet pour savoir dans quel registre                 écrire, quel flag lever, ...             </p>             <p>                 Lors d’une session sur la communication sans fil, nous avons dû coder un programme permettant de créer                 un network <span>zigbee</span> entre tous les modules.             </p>             <p>                 Nous avons également abordé à l’occasion d’autres problèmes : la communication série i<span>SPI</span> et <span>I2C</span>, la                 programmation en temps réel avec l’os temps réel <span>FreeRTOS</span> et le multithread."
        },
        "stage": {
            "article": "Dans le cadre de mon stage de dernière année en école d'ingénieurs, j'ai travaillé sur la conception et le développement d'un modèle mathématique permettant d'exprimer les performances du système de comptage <span>RFID</span> grâce à des équations mathématiques.              </p>             <p>             Nous étions trois stagiaires, mais devions travailler en autonomie. Nous occupions des postes d'ingénieurs chercheurs, et devions produire une documentation détaillée sur l'état d'avancement du projet (état de l'art, cahier des charges, architecture). Chacun avait en charge une technologie différente pour le comptage de colis dans un entrepôt de stockage.              </p>         <p>             Après avoir dimensionné l'environnement dans lequel serait déployé le système, j'ai dû choisir les composants qui forment le système. J'ai décidé de partir sur l'option « low cost » avec des composants qui me sont familiers : un <span>Arduino</span> et un shield Arduino RFID.              </p>             <p>             J'ai moi-même codé le logiciel du Arduino pour driver le module RFID en SPI. J'ai également codé un petit programme en <span>C</span> pour communiquer avec le Arduino et compiler les données recueillies dans des fichiers XML.               </p>             <p>             J'ai défini plusieurs plans de tests pour recueillir le maximum de données sur le système, avec des configurations différentes. Au final j'ai traité les données grâce à <span>Python</span> et <span>Matlab</span>, pour obtenir un modèle mathématique du système et des représentations graphiques de ces performances."
        },
        "unity": {
            "article": "Internet ne manque pas de documentation et de tutoriel qui montre comment utiliser Unity, je me suis                 donc entraîné en réalisant beaucoup de petits tests, et en suivant des vidéo Youtube comme celles de                 \"Brackeys\".             </p>             <p>                 Comme j’avais de solides bases de développeur, j’ai pu facilement ajouter à mes connaissances des                 notions liées au game-dev. Ce qui me limitait surtout, c’est mes lacunes en graphismes et en Render.                 Heureusement, la partie graphisme de Unity est très simplifiée donc cela ne m’a pas trop freiné mes                 expérimentations de jeu vidéo.             </p>             <p>                  Ces expériences avec le game-dev m’ont permis d’utiliser des connaissances que j’avais déjà à d’autres                 fins. J’ai pu tester des idées que j’avais en tête comme des states machines, des mécanismes pour des                 platformers ou des turnbases.             </p>             <p>                 Le jeu le plus complet que j’ai pu réaliser à partir de zéro est un jeu en 2D dans lequel le joueur                 incarne un petit chien qui doit réaliser des tâches dans une maison. Pour ce jeu j’ai essayé d’appliquer                 des notions de programmation orientée objet apprises durant mes études, notamment en utilisant des patrons                 de conception comme celui du singleton ou de la factory."
        }
    }
}